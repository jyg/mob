#N struct bckgrnd float x float y float width float height float color
;
#N canvas 184 58 1338 1003 16;
#X scalar bckgrnd 0 0 600 960 654 \;;
#X scalar bckgrnd 600 0 600 960 654 \;;
#X scalar bckgrnd 1200 0 600 960 654 \;;
#X obj 291 11 mob;
#A saved -R 166.654;
#A saved -G 152.598;
#A saved -B 108.425;
#A saved -pages 3;
#A saved -mode 2;
#A saved -landscape 0;
#A saved -zoom 1;
#X obj 869 449 mob/button;
#A saved -invisible 0;
#A saved -z_offset 0;
#A saved -name mybutton;
#A saved -cursor_color -1;
#A saved -back_color -9.20064e+06;
#A saved -size 60 60;
#X obj 645 422 mob/xy_slider;
#A saved -invisible 0;
#A saved -z_offset 0;
#A saved -max 1;
#A saved -min -1;
#A saved -name xy;
#A saved -cursor_color -1;
#A saved -back_color -1.3559e+07;
#A saved -size 191 110;
#X obj 524 370 vsl 50 200 0 127 0 0 my_vsl my_vsl-rcv empty 0 -9 0
10 -260097 -257985 -1 0 0;
#X obj 126 322 hsl 300 50 0 1 0 0 my_hsl my_hsl-rcv empty -2 -8 0 10
-232576 -258113 -1 0 0;
#X obj 452 414 vradio 50 1 1 4 my_vradio my_vradio-rcv empty 0 -8 0
10 -4034 -159808 -1 0;
#X obj 123 380 hradio 60 1 1 5 my_hradio my_hradio-rcv empty 0 -8 0
10 -260097 -257985 -1 3;
#X text 15 102 [mob] converts guis into mmp-widgets., f 24;
#X text 18 259 * supported native GUIs :;
#X text 44 333 -hsl;
#X text 527 335 -vsl;
#X text 43 401 -hradio;
#X text 439 386 -vradio;
#X text 44 443 -bng;
#X obj 52 467 bng 70 250 50 0 my_bng my_bng empty 17 7 0 10 -262144
-1 -1;
#X text 135 470 (bng is converted as a button), f 12;
#X text 647 267 -mob/hfader;
#X text 865 380 -mob/vfader;
#X text 863 418 -mob/button;
#X text 16 154 Just draw your interface \, then press the red button
and copy the .pd and .mmp files to the target platform!, f 56;
#X text 652 373 -mob/xy_slider (jump on touch), f 16;
#X obj 900 47 vradio 50 1 0 3 mob_load mob_load-rcv empty 0 -8 0 10
-4034 -159808 -1 0;
#X text 892 18 mob_load;
#X obj 1008 50 vradio 50 1 0 3 mob_save mob_save-rcv empty 0 -8 0 10
-258113 -159808 -1 1;
#X text 1005 17 mob_save;
#X text 177 326 (only 'jump on click' mode for sliders), f 23;
#X text 42 285 -comments are displayed on the target platform.;
#X obj 989 374 mob/vfader;
#A saved -invisible 0;
#A saved -z_offset 0;
#A saved -mode 1;
#A saved -max 127;
#A saved -min 0;
#A saved -name my_vsl;
#A saved -speed_ratio 148.865;
#A saved -front_color -1.56477e+07;
#A saved -cursor_color 0;
#A saved -back_color -1.56298e+07;
#A saved -size 76 159;
#X obj 653 296 mob/hfader;
#A saved -invisible 0;
#A saved -z_offset 0;
#A saved -mode 1;
#A saved -max 1;
#A saved -min 0;
#A saved -name my_hsl;
#A saved -speed_ratio 181.631;
#A saved -front_color -8.28384e+06;
#A saved -cursor_color 0;
#A saved -back_color -1.25007e+07;
#A saved -size 176 63;
#X obj 1092 372 mob/vfader;
#A saved -invisible 0;
#A saved -z_offset 0;
#A saved -mode 0;
#A saved -max 127;
#A saved -min 0;
#A saved -name my_vsl;
#A saved -speed_ratio 100;
#A saved -front_color -1.56477e+07;
#A saved -cursor_color 0;
#A saved -back_color -1.56298e+07;
#A saved -size 76 159;
#X obj 857 292 mob/hfader;
#A saved -invisible 0;
#A saved -z_offset 0;
#A saved -mode 0;
#A saved -max 1;
#A saved -min 0;
#A saved -name my_hsl;
#A saved -speed_ratio 100;
#A saved -front_color -8.28384e+06;
#A saved -cursor_color 0;
#A saved -back_color -1.25007e+07;
#A saved -size 178 63;
#N canvas 0 50 630 343 TODO 0;
#X text 60 51 Arrays;
#X text 24 6 TODO LIST;
#X text 91 81 -enable preset saving of arrays;
#X text 95 111 -abstraction to choose colors \, displaymode \, editmode
;
#X text 52 161 Object emulating LCD display with datastructures;
#X text 49 239 Dialog box;
#X text 47 270 Confirm dialog box;
#X text 44 297 Multitouch xyslider;
#X text 46 201 Multi Slider;
#X restore 1224 918 pd TODO;
#N canvas 0 50 450 250 (subpatch) 0;
#X array array1 20 float 3;
#A 0 0.257144 0.300001 0.314286 0.314286 0.285715 0.257144 0.228573
0.200002 0.157145 0.142859 0.128574 0.100003 0.0857171 0.0714316 0.057146
0.0428604 0.0428604 0.0428604 0.0428604 0.157145;
#X coords 0 1 20 -1 200 140 1;
#X restore 374 733 graph;
#X text 17 686 * Quick and dirty export of gop-arrays;
#X text 616 42 * Preset state saving using reserved senders names 'mob_load'
& 'mob_save', f 24;
#X text 43 741 Quick and dirty export of gop-array uses only mode 0
\, displayMode 0, f 22;
#X obj 57 578 cnv 15 350 60 my_cnv my_cnv-rcv ceci 20 25 0 50 -233017
-66577 0;
#X text 621 231 * mob/Guis :;
#X text 1103 428 (jump mode), f 5;
#X text 990 427 (steady mode), f 7;
#X text 685 299 (steady mode);
#X text 887 296 (jump mode);
#N canvas 567 330 589 177 about 0;
#X text 34 43 (For now \, jump mode is effective only in mmp interface
\, not in tcl/tk vfader / hfader objects), f 47;
#X restore 1055 291 pd about jump/steady modes;
#X f 12;
#N canvas 0 50 609 459 How_to_edit_mob/faders_properties 0;
#X text 35 58 To edit mob/Guis properties :;
#X text 60 99 right-click & choose "properties";
#X text 30 139 To resize :;
#X text 49 179 set edit mode (ctrl+e) \, press ctrl key and then click
and drag, f 40;
#X text 29 282 pd 0.5 :;
#X text 23 342 This issue will be fixed with pd 0.51;
#X text 21 246 WARNING;
#X text 22 245 WARNING;
#X text 46 313 Resizing does not work properly with canvas zooming
= 2;
#X restore 815 254 pd How_to_edit_mob/faders_properties;
#X text 303 447 -tgl;
#X obj 306 473 tgl 70 1 my_tgl my_tgl-rcv empty 17 7 0 10 -261234 -258113
-1 1 1;
#X text 90 892 number \, symbol \, vu;
#X text 59 200 Note : [mob] object will not appear on the target platform
\, you can move it anywhere on the patch., f 53;
#X floatatom 541 614 5 0 0 0 - - -;
#X text 48 550 -cnv + text;
#X text 656 550 -mob/menu (modal menu);
#X text 24 868 * currently not supported guis :;
#N canvas 0 50 537 340 About_array_displaying_modes 0;
#X text 39 18 MMP offers different modes for displaying arrays, f
26;
#X text 41 69 mode 0 : edit content \, mode 1 : select zone, f 24
;
#X text 39 112 displayMode 0 = line \, displayMode 1 = filled bar,
f 27;
#X text 43 191 Quick and dirty export of gop-array uses only mode 0
\, displayMode 0, f 43;
#X restore 45 819 pd About_array_displaying_modes;
#N canvas 0 50 730 596 some_restrictions_with_native_guis 0;
#X text 22 29 Native guis can be connected by wires but MUST have defined
send/receive channels., f 53;
#X text 25 85 The send channel defines the name of the parameter to
be handled.;
#X text 23 311 No logarithm mode for sliders on target platform \,
but you can define any bounds (min and max values for sliders);
#N canvas 0 50 647 574 example 0;
#X obj 27 20 mob/listenerXY_lin my_param my_param-rcv -1 0 128;
#A saved 0 0;
#A saved MOB_TARGET my_param;
#X obj 273 232 s my_param;
#X obj 79 128 vsl 40 128 0 127 0 0 my_param my_param-rcv empty 0 -9
0 10 -262144 -1 -1 0 1;
#X msg 263 160 2;
#X msg 324 162 56;
#X text 106 99 my_param-rcv;
#X text 110 259 my_param;
#X obj 409 130 vsl 40 128 0 127 0 0 my_param my_param-rcv empty 0 -9
0 10 -262144 -1 -1 0 1;
#X text 436 101 my_param-rcv;
#X text 440 261 my_param;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X restore 255 216 pd example;
#X text 24 137 There is no need to update the guis in your patch with
[set \$1( messages sent to the rcv channel. The listeners do that for
you. To change the value \, say \, of a slider \, just send the value
to the associed parameter name sender., f 53;
#X text 24 282 But you can use mob/hfader & mob/vfader with steady
mode property., f 67;
#X text 25 448 No labels attached to guis. Use comment or cnv objects
;
#X text 26 489 No quotation marks (") in comments \, else mmp export
will fail., f 62;
#X text 23 374 Legacy guis supports init feature as defined in their
properties dialog.;
#X text 23 250 Only "jump on click" mode for native sliders on target
platform., f 65;
#X restore 39 923 pd some_restrictions_with_native_guis;
#N canvas 0 50 450 300 mob-listeners 0;
#X obj 20 50 mob/listener mybutton mybutton-rcv;
#X obj 20 100 mob/listenerXY_lin xy xy-rcv 1 -1 1 0 0;
#A saved 0 0;
#A saved MOB_TARGET xy;
#X obj 20 150 mob/listener_lin my_vsl my_vsl-rcv 2 0 127;
#X obj 20 200 mob/listener_lin my_hsl my_hsl-rcv 3 0 1;
#X obj 20 250 mob/listenerVradio my_vradio my_vradio-rcv 4 4;
#X obj 20 300 mob/listenerHradio my_hradio my_hradio-rcv 5 5;
#X obj 20 350 mob/listenerBng my_bng 6 250 50;
#X obj 20 400 mob/listenerVradio mob_load mob_load-rcv 7 3;
#X obj 20 450 mob/listenerVradio mob_save mob_save-rcv 8 3;
#X obj 20 500 mob/listenerVLCD_lin my_vsl my_vsl-rcv 9 0 127 148.865
0;
#A saved 0;
#A saved MOB_TARGET my_vsl;
#X obj 20 550 mob/listenerHLCD_lin my_hsl my_hsl-rcv 10 0 1 181.631
0;
#A saved 0;
#A saved MOB_TARGET my_hsl;
#X obj 20 600 mob/listenerVLCD_lin my_vsl my_vsl-rcv 11 0 127 0 0;
#A saved 0;
#A saved MOB_TARGET my_vsl;
#X obj 20 650 mob/listenerHLCD_lin my_hsl my_hsl-rcv 12 0 1 0 0;
#A saved 0;
#A saved MOB_TARGET my_hsl;
#X obj 20 700 mob/listenerCnv my_cnv my_cnv-rcv;
#X obj 20 750 mob/listener my_tgl my_tgl-rcv;
#X obj 20 800 mob/listenerCnv menu_result menu_result-rcv;
#X obj 20 850 mob/listenerMenu my_menu my_menu-rcv;
#X obj 20 900 mob/listener back back-rcv;
#X obj 20 950 mob/listener top top-rcv;
#X obj 20 0 mob/loader mob-help;
#X restore 100 10 pd mob-listeners;
#N canvas 0 50 450 300 populating_menu 0;
#X obj 96 129 s my_menu-rcv;
#X msg 96 89 set this is my menu list of items;
#X obj 99 46 loadbang;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X restore 657 654 pd populating_menu;
#X obj 969 585 cnv 15 200 60 menu_result menu_result-rcv empty 10 20
0 26 -261234 -66577 0;
#N canvas 0 50 450 300 getting_menu_result 0;
#X obj 49 29 r my_menu;
#X msg 86 89 label \$1:\$2;
#X obj 86 118 s menu_result-rcv;
#X obj 49 211 unpack f s;
#X floatatom 49 240 5 0 0 0 - - -;
#X symbolatom 145 244 10 0 0 0 - - -;
#X text 253 63 displaying result in canvas object, f 18;
#X text 248 137 cnv receiver name;
#X msg 184 26 label;
#X connect 0 0 1 0;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 3 1 5 0;
#X connect 8 0 2 0;
#X restore 938 657 pd getting_menu_result;
#X text 984 551 Menu output :;
#X obj 656 583 mob/menu my_menu;
#A saved -font_color -1.6777e+07;
#A saved -title My_menu;
#A saved -name my_menu;
#A saved -size 303 67;
#N canvas 0 50 748 453 changing_cnv's_text 0;
#X msg 222 101 ceci;
#X msg 231 140 est;
#X msg 229 175 un;
#X msg 310 105 texte;
#X obj 218 28 r my_vradio;
#X obj 218 57 select 0 1 2 3;
#X obj 164 362 s my_cnv-rcv;
#X obj 165 300 list prepend label;
#X obj 165 329 list trim;
#X text 373 269 Other messages aren't handled.;
#X text 368 169 label messages sent to canvas receiver are automatically
forwarded to MobMuPlat interface., f 31;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 5 1 1 0;
#X connect 5 2 2 0;
#X connect 5 3 3 0;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X restore 56 642 pd changing_cnv's_text;
#X obj 1250 135 tgl 200 0 back back-rcv empty 17 7 0 10 -228856 -99865
-1 0 1;
#X obj 1341 211 tgl 200 0 top top-rcv empty 17 7 0 10 -261234 -4034
-1 0 1;
#X text 1023 872 advanced -->;
#X text 1250 43 ADVANCED;
#N canvas 0 50 778 470 more 0;
#X text 48 302 If you plan to create complex behaviors with overlapped
widgets and transparency support \, use MobMuPlatEditor or test on
your target device., f 25;
#X text 18 60 In puredata tcl/tk interface \, widgets on background
level intercept mouse interaction. On MobMuPlat \, widget on top level
intercept touch interaction., f 53;
#X text 59 144 puredata tcl/tk doesn't support transparency., f 23
;
#X text 61 192 mob/widgets have a "invisible" checkbox in properties
panel for MobMuPlat Widget export, f 47;
#X restore 1589 192 pd more;
#X text 1229 70 * Z-order and touch interaction differ in tcl/tk and
in MobMuPlat, f 38;
#X connect 6 0 51 0;
